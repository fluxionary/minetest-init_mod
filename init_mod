#!/usr/bin/env python3

import argparse
import datetime
import getpass
import os
import pathlib
import re
import shutil
import subprocess

our_path = pathlib.Path(os.path.realpath(__file__)).parent


def main(args):
    mod_name = args.mod_name
    current_date = datetime.datetime.datetime(tz=datetime.timezone.utc)
    format_data = {
        'mod_name': mod_name,
        'author': args.author,
        'year': current_date.year,
        'version': f'{{year = {current_date.year}, month = {current_date.month}, day = {current_date.day}}}',
        'version_short': f'{current_date.year}-{current_date.month:02}-{current_date.day:02}',
        'license': args.license,
    }

    mod_path = pathlib.Path(os.getcwd()) / mod_name

    mod_path.mkdir(parents=True, exist_ok=True)

    for child in (our_path / 'static_files').iterdir():
        if child.is_file():
            shutil.copyfile(child, mod_path / child.name)

        elif child.is_dir():
            shutil.copytree(child, mod_path / child.name)

    p = re.compile(r'^(.*)\.format')
    for child in (our_path / 'templates').iterdir():
        if child.is_file():
            contents = child.read_text()
            dest_name = p.sub(r'\1', child.name)
            dest = mod_path / dest_name
            dest.write_text(contents.format(**format_data))

    license_path = our_path / 'choice_files' / f'LICENSE.txt.{args.license}.format'
    contents = license_path.read_text()
    dest = mod_path / 'LICENSE.txt'
    dest.write_text(contents.format(**format_data))

    media_license_path = our_path / 'choice_files' / f'MEDIA_LICENSE.txt.{args.license}.format'
    contents = media_license_path.read_text()
    dest = mod_path / 'MEDIA_LICENSE.txt'
    dest.write_text(contents.format(**format_data))

    subprocess.run(["git", "init"], cwd=mod_path)
    subprocess.run(["pre-commit", "install"], cwd=mod_path)


def get_choices(base_name):
    choices = []
    p = re.compile(f'^{base_name}.(.*).format$')

    for file in (our_path / 'choice_files').iterdir():
        m = p.match(file.name)
        if m:
            choices.append(m.group(1))

    return choices


def parse_args(argv=None, namespace=None):
    licenses = get_choices('LICENSE.txt')

    parser = argparse.ArgumentParser()
    parser.add_argument('mod_name')
    parser.add_argument('--author', '-a', default=getpass.getuser())
    parser.add_argument('--license', '-l', choices=licenses, default='AGPL-3.0-or-later')
    parser.add_argument('--media_license', '-m', choices=licenses, default='CC-BY-SA-4.0')
    return parser.parse_args(argv, namespace)


if __name__ == '__main__':
    main(parse_args())
